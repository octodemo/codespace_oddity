name: Hello

on: 
  workflow_dispatch:
    inputs:
      name:
        description: 'Person to greet'
        required: true
        default: 'Mona the Octocat'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 21 * * 0'

jobs:
  hello:
    name: "Say hello ðŸ‘‹"
    runs-on: ubuntu-latest
    steps:
    - name: Say hello
      run: |
        echo "Hello ${{github.event.inputs.name}}"
  
  build-in-container:
    name: "Build ðŸš§:"
    runs-on: ubuntu-latest
    container:
      image: node:10.16-jessie
      env:
        NODE_ENV: development
    steps:
      - uses: actions/checkout@v2
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
        
  deploy:
    name: "Deploy ðŸš€"
    runs-on: ubuntu-latest
    needs: 
      - hello
      - build-in-container 
    outputs:
      production_message: ${{ steps.share.outputs.production_message }}
      development_message: ${{ steps.share.outputs.development_message }}
      staging_message: ${{ steps.share.outputs.staging_message }}

    strategy:
      fail-fast: true
      matrix: 
        env: [
          { name: 'development' },
          { name: 'staging' },
          { name: 'production' }
        ]
    
    environment: 
      name: ${{ matrix.env.name }}
      
    steps:
    - name: Get the repo
      uses: actions/checkout@v2

    - name: Load the environment
      uses: xom9ikk/dotenv@v1
      with:
        mode: ${{ matrix.env.name }}

    - name: Say something nice
      run: |
        echo "::group::My messages in a group"
        echo "Hello ${{ env.MSG }} from $${github.event.inputs.name}}. Here's a secret ${{ secrets.SECRET_MESSAGE }}"
        echo "::endgroup::"

    - name: Share something nice
      id: share
      run: |
        echo "::set-output name=${{ matrix.env.name }}_message::${{ env.MSG }}"
   
  goodbye:
    name: "Bye ðŸ––"
    runs-on: ubuntu-latest
    needs: 
      - deploy
    steps:
    - name: Retrieve something nice
      run: |
        echo "::warning ::${{ needs.deploy.outputs.production_message }}"
  